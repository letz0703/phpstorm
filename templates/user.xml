<templateSet group="user">
  <template name="fori" value="for ($i = 0; $i &lt; $selection$; $i++)&#10;{           &#10;    $END$&#10;}" description="for $i" toReformat="true" toShortenFQNames="true">
    <variable name="selection" expression="" defaultValue="20" alwaysStopAt="true" />
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="primet" value="private function $name$($varialble$)&#10;{&#10;    $END$      &#10;}" description="public function" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="varialble" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="psr4_yml" value="suites:&#10;  acme_suite:&#10;    namespace: Acme&#10;    psr4_prefix: Acme&#10;    src_path: src/Acme" description="phpspec_config_yml" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="PHP" value="false" />
      <option name="SQL" value="false" />
      <option name="Twig" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="composer_json" value="{&#10;  &quot;require&quot;: {&#10;    &quot;phpspec/phpspec&quot;: &quot;^4.2&quot;&#10;  },&#10;  &quot;autoload&quot;: {&#10;    &quot;psr-4&quot;: {&#10;      &quot;Acme\\&quot;: &quot;src/Acme&quot;&#10;    }&#10;  }&#10;}&#10;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSON" value="true" />
    </context>
  </template>
  <template name="Gulp_file.js" value="var gulp = require('gulp');&#10;var phpspec = require('gulp-phpspec');&#10;var run = require('gulp-run');&#10;var notify = require('gulp-notify');&#10;&#10;gulp.task('test', function () {&#10;    gulp.src('spec/**/*.php')&#10;        .pipe(phpspec('', {clear: true, notify: true}))&#10;        .on('error', notify.onError({&#10;            title: 'Crap',&#10;            message: 'Test Failed',&#10;            icon: __dirname + '/fail.png',&#10;            sound: 'Frog'&#10;        }))&#10;        .pipe(notify({&#10;            title: 'Success',&#10;            message: 'All tests have returned green!',&#10;        }));&#10;});&#10;&#10;gulp.task('watch', function () {&#10;    gulp.watch(['spec/**/*.php', 'src/**/*.php'], ['test']);&#10;});&#10;&#10;gulp.task('default', ['test', 'watch']);&#10;&#10;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="textfield" value="&lt;!-- $VALUE$ Input --&gt;&#10;&lt;div class=&quot;form-group&quot;&gt;&#10;    {{ Form::label('$NAME$','$VALUE$:') }}&#10;    {{ Form::text('$NAME$', null, ['class' =&gt; 'form-control']}}&#10;&lt;/div&gt;" description="Form text field" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="capitalize(NAME):" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="passwordfield" value="&lt;!-- $VALUE$ Input --&gt;&#10;&lt;div class=&quot;form-group&quot;&gt;&#10;    {{ Form::label('$NAME$','$VALUE$:') }}&#10;    {{ Form::password('$NAME$', ['class' =&gt; 'form-control']}}&#10;&lt;/div&gt;" description="Form password field" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="capitalize(NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="ret" value="return $END$&#10;;" description="return ;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="vue" value="&lt;template&gt;&#10;    &lt;div&gt;&#10;        $END$&#10;    &lt;/div&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script&gt;&#10;    export default {&#10;        props: ['$1$'],&#10;        &#10;        data() {&#10;            return {&#10;                $2$&#10;            }&#10;        }&#10;    }&#10;&lt;/script&gt;" description="Vue template" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="comp" value="computed: {&#10;    $END$            &#10;}," description="vue computed" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vmet" value="methods: {&#10;    $NAME$($ATTR$){ &#10;        $END$&#10;    } &#10;}," description="vue method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ATTR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="com" value="components: { $END$ }, " description="vue components" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vm" value="$NAME$($1$){&#10;    $END$                  &#10;}," description="vue method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bspage" value="&lt;ul class=&quot;pagination&quot;&gt;&#10;    &lt;li class=&quot;page-item&quot;&gt;&#10;        &lt;a class=&quot;page-link&quot; href=&quot;#&quot; aria-label=&quot;Previous&quot;&gt;&#10;            &lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo; previous&lt;/span&gt;&#10;            &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;/span&gt;&#10;        &lt;/a&gt;&#10;    &lt;/li&gt;&#10;    &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;&#10;    &lt;li class=&quot;page-item&quot;&gt;&#10;        &lt;a class=&quot;page-link&quot; href=&quot;#&quot; aria-label=&quot;Next&quot;&gt;&#10;            &lt;span aria-hidden=&quot;true&quot;&gt;next &amp;raquo;&lt;/span&gt;&#10;            &lt;span class=&quot;sr-only&quot;&gt;Next&lt;/span&gt;&#10;        &lt;/a&gt;&#10;    &lt;/li&gt;&#10;&lt;/ul&gt;" description="bootstrap paginate" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="bsdrop" value="&lt;li class=&quot;nav-item dropdown&quot;&gt;&#10;    &lt;a id=&quot;navbarDropdown&quot; class=&quot;nav-link dropdown-toggle&quot; href=&quot;#&quot; role=&quot;button&quot; data-toggle=&quot;dropdown&quot;&#10;       aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot; v-pre&gt;&#10;        $START$&#10;        &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&#10;    &lt;/a&gt;&#10;    &lt;div class=&quot;dropdown-menu&quot; aria-labelledby=&quot;navbarDropdown&quot;&gt;&#10;        &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;$END$&lt;/a&gt;&#10;    &lt;/div&gt;&#10;&lt;/li&gt; " description="bootstrap dropdown" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="citem" value="$item = create('App\Item'$END$);" description="fatory app crate" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="cbox" value="$box = create('App\Box');" description="factory app crate box" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="fn" value="function ($VAR$){ &#10;   $VAR1$-&gt;$END$;&#10;}" description="function" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR1" expression="" defaultValue="VAR" alwaysStopAt="false" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="settime" value="setTimeout(() =&gt; {&#10;    $EXPR$ ;&#10;}, $SECOND$);" description="setTimeOut" toReformat="false" toShortenFQNames="true">
    <variable name="EXPR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SECOND" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vbutton" value="&lt;button class=&quot;btn btn-primary btn-sm&quot;&gt;$END$&lt;/button&gt;" description="Vue용 button" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="@c" value="@click=&quot;$METHOD$&quot;$END$" description="@click" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vfadeout" value="$(this.$el).fadeOut(100, () =&gt;{&#10;    flash('deleted');&#10;});" description="Vue FadeOut" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vreload" value="window.location.reload();" description="vue reload" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vcom" value="components: { $COMEPONENT$ }," description="vue computed" toReformat="true" toShortenFQNames="true">
    <variable name="COMEPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vcon" value="console.log('$END$');" description="console log" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vcre" value="created() {&#10;   this.$MEHTOD$();&#10;}," description="vue created" toReformat="false" toShortenFQNames="true">
    <variable name="MEHTOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vmixin" value="&lt;script&gt;&#10;    export default {&#10;       &#10;        data() {&#10;            return {&#10;                $END$&#10;            }&#10;        },&#10;        &#10;        methods: {&#10;           $METHOD$ &#10;        },&#10;    }&#10;&lt;/script&gt;" description="VUE mixins" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="mixin" value="mixins: [ $trait$ ]," description="mixins" toReformat="false" toShortenFQNames="true">
    <variable name="trait" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="res" value="response" description="response" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="vif" value="&lt;div v-if=&quot;$END$&quot;&gt;&lt;/div&gt;" description="v-if" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="focus" value="&lt;script&gt;&#10;    window.onload = function() {&#10;        document.getElementById(&quot;$ID$&quot;).focus();&#10;    };&#10;&lt;/script&gt;" description="input focus" toReformat="true" toShortenFQNames="true">
    <variable name="ID" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="msq" value="minimum_stock_quantity" description="minimu_stock_quantity" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="$" value="$this-&gt;" description="this" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="make_slug" value="function make_slug($string)&#10;    {&#10;        $slug = preg_replace('/\s+/u','-',trim($string));&#10;        return $slug = str_slug($slug);&#10;    }" description="replace str_slug" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="gscope" value="protected static function boot()&#10;{&#10;    parent::boot();&#10;      &#10;    static::addGlobalScope('$NAME$', function ($builder){&#10;        $builder-&gt;where('$columnName$', $CONDITION$)&#10;                -&gt;orderBy('$columnName2$', 'asc');&#10;    });&#10;}&#10;$END$" description="addGlobalScope" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="&quot;active&quot;" alwaysStopAt="true" />
    <variable name="columnName" expression="" defaultValue="&quot;archived&quot;" alwaysStopAt="true" />
    <variable name="CONDITION" expression="" defaultValue="&quot;condition&quot;" alwaysStopAt="true" />
    <variable name="columnName2" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="mock" value="$this-&gt;mock($CLASS$::class, function($mock){&#10;    $mock-&gt;shouldReceive('$MET_NAME$')-&gt;andReturn(true);&#10;});" description="Mockery mock" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MET_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="log" value="\DB::listen(function($e){&#10;     info($e-&gt;sql);&#10;});" description="log to larvel.log(+AppServiceProvider)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="bssearch" value="&lt;div class=&quot;card&quot;&gt;&#10;    &lt;div class=&quot;card-header&quot;&gt;Search&lt;/div&gt;&#10;    &lt;div class=&quot;card-body&quot;&gt;&#10;        &lt;form method=&quot;GET&quot; action=&quot;/threads/search&quot;&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;input type=&quot;text&quot; &#10;                       class=&quot;form-control&quot; &#10;                       name=&quot;q&quot; &#10;                       placeholder=&quot;Search for something&quot;&#10;                &gt;&#10;            &lt;/div&gt; &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn btn-sm&quot;&gt;Search &lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;" description="search form" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="newv" value="new Vue({&#10;    el: &quot;#$VALUE$&quot;,&#10;    data: {&#10;        $END$                &#10;    }&#10;});" description="new Vue" toReformat="false" toShortenFQNames="true">
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="exd" value="export default {&#10;    $END$&#10;}" description="export default" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="testvue" value="test('that it $TESTNAME$', t =&gt; {&#10;    let N = Vue.extend($JS$);&#10;    let vm = new N({ propsData: {&#10;            message: 'Foobar'&#10;        }&#10;    }).$mount();&#10;    t.is(vm.$el.$textContent$, '$END$');&#10;});" description="vue testing" toReformat="true" toShortenFQNames="true">
    <variable name="TESTNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="JS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="textContent" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="VUE_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cl" value="console.log('$END$');" description="console.log" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="VUE_COMPONENT_DESCRIPTOR" value="true" />
    </context>
  </template>
  <template name="placeimg" value="&lt;img src=&quot;https://placeimg.com/640/480/any$END$&quot;&gt;" description="image place from web" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="true" />
    </context>
  </template>
  <template name="pt" value="&lt;portal-target name=&quot;$END$&quot;&gt;&lt;/portal-target&gt;" description="portal-target vue-fortal" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="VUE_TOP_LEVEL" value="true" />
    </context>
  </template>
  <template name="bgblue" value="style=&quot;background:aliceblue;$STYLE$&quot; class=&quot;$END$&quot;" description="test background color" toReformat="true" toShortenFQNames="true">
    <variable name="STYLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="HTML_TEXT" value="false" />
      <option name="VUE_INSIDE_TAG" value="true" />
    </context>
  </template>
  <template name="letzstyle" value="style=&quot;background:aliceblue$END$&quot;" description="letzstyle" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="HTML_TEXT" value="false" />
      <option name="VUE_INSIDE_TAG" value="true" />
    </context>
  </template>
  <template name="docqs" value="document.querySelector($END$)" description="document.querySelector" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_EXPRESSION" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="VUE_COMPONENT_DESCRIPTOR" value="true" />
    </context>
  </template>
  <template name="docqsa" value="document.querySelectorAll($END$)" description="document.querySelectorAll" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_EXPRESSION" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="VUE_COMPONENT_DESCRIPTOR" value="true" />
    </context>
  </template>
  <template name="scriptvue" value="&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;" description="Vue cdn" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="VUE_TEMPLATE" value="true" />
    </context>
  </template>
  <template name="html" value="&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot;&#10;          content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;&#10;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;&#10;    &lt;title&gt;&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    $END$&#10;&lt;/body&gt;&#10;&lt;/html&gt;" description="html template" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="true" />
    </context>
  </template>
  <template name="rr" value="return redirect($ENDPOINT$);" description="return redirct" toReformat="true" toShortenFQNames="true">
    <variable name="ENDPOINT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="cproject" value="$project = ProjectFactory::$END$create();" description="create project" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="mix" value="const mix = require('laravel-mix');&#10;&#10;const tailwindcss = require('tailwindcss');&#10;/*&#10; |--------------------------------------------------------------------------&#10; | Mix Asset Management&#10; |--------------------------------------------------------------------------&#10; |&#10; | Mix provides a clean, fluent API for defining some Webpack build steps&#10; | for your Laravel application. By default, we are compiling the Sass&#10; | file for the application as well as bundling up all the JS files.&#10; |&#10; */&#10;const domain = '$TESTDOMAIN$';&#10;const homedir = require('os').homedir();&#10;&#10;mix&#10;    .setPublicPath('public')&#10;    .js('resources/js/app.js', 'js')&#10;    .sass('resources/sass/app.scss', 'css')&#10;    .browserSync({&#10;        // proxy: 'https://'+ domain,&#10;        proxy: domain,&#10;        host: domain,&#10;        open:'external',&#10;        // https: {&#10;        //    key: homedir + '/.valet/Certificates/'+domain+'.key',&#10;        //    cert: homedir + '/.valet/Certificates/'+domain+'.crt',&#10;        // },&#10;        files: [&#10;            'resources/**/*'&#10;        ]&#10;    })&#10;    .options({&#10;        processCssUrls: false,&#10;        postCss: [&#10;            tailwindcss('./tailwind.config.js')&#10;        ],&#10;    });" description="webpack.mix.js" toReformat="true" toShortenFQNames="true">
    <variable name="TESTDOMAIN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="VUE_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rv" value="return view('$VIEW$', compact('$END$'));" description="return view" toReformat="true" toShortenFQNames="true">
    <variable name="VIEW" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="blade" value="@extends('layouts.blade')&#10;&#10;@section('content')&#10;    $END$&#10;@endsection" description="blade template" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="true" />
      <option name="VUE_TOP_LEVEL" value="true" />
    </context>
  </template>
  <template name="c" value="create" description="create" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Expression" value="true" />
      <option name="PHP Statement" value="true" />
    </context>
  </template>
  <template name="fixDate" value="protected function serializeDate(DateTimeInterface $date)&#10;    {&#10;        return $date-&gt;format('Y-m-d H:i:s');&#10;    }" description="error fix serailizeDate" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="psmet" value="public static function $NAME$(){&#10;    $END$        &#10;}" description="public static method" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="met" value="public void $NAME$($VAR$){&#10;    $END$    &#10;}" description="public static" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="prst" value="private static $FILENAME$ $END$;  " description="private static" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="FILENAME" expression="fileName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="clicklistener" value="setOnClickListener(v -&gt; {&#10;    $END$&#10;});&#10;" description="set onclick listener" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="igo" value="Intent igo$TODO$ = new Intent($ClassName$.this,$DESTINATION$.class);&#10;startActivity(igo$NAME$);&#10;$END$finish();&#10;" description="Intent i goto" toReformat="false" toShortenFQNames="false">
    <variable name="TODO" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="fileNameWithoutExtension" defaultValue="" alwaysStopAt="false" />
    <variable name="DESTINATION" expression="" defaultValue="TODO" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="TODO" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="onclick" value="$btn$.setOnClickListener(v -&gt; {&#10;    $END$&#10;});" description="setOnClickListener" toReformat="false" toShortenFQNames="true">
    <variable name="btn" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="fdb_auth" value="FirebaseAuth auth = FirebaseAuth.getInstance();&#10;FirebaseUser user = auth.getCurrentUser();&#10;" description="firebase database auth user infomation definition" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="fdbref" value="FirebaseDatabase database = FirebaseDatabase.getInstance();&#10;DatabaseReference fdbref$NAME$ = database.getReference(&quot;$CHILD_NAME$&quot;);&#10;&#10;FirebaseAuth auth = FirebaseAuth.getInstance();&#10;FirebaseUser FirebaseUser = auth.getCurrentUser();&#10;" description="firebase db connect with reference" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CHILD_NAME" expression="lowercaseAndDash(NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="btn_java" value="$BUTTON_NAME$ = findViewById(R.id.btn$ID$_$PAGE_NAME$);&#10;$BUTTON_NAME$.setOnClickListener(v -&gt; {&#10;            &#10;});" description="java button" toReformat="false" toShortenFQNames="true">
    <variable name="BUTTON_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ID" expression="capitalize(BUTTON_NAME)" defaultValue="" alwaysStopAt="true" />
    <variable name="PAGE_NAME" expression="fileNameWithoutExtension" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="isend" value="Intent i$TODO$ = new Intent($ClassName$.this,$DESTINATION$.class);&#10;i$NAME$.putExtra(&quot;$VAR$&quot;,$VARNAME$);&#10;startActivity(i$NAME$);&#10;$END$finish();&#10;" description="Intent to send data to other activity" toReformat="false" toShortenFQNames="false">
    <variable name="TODO" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ClassName" expression="fileNameWithoutExtension" defaultValue="" alwaysStopAt="false" />
    <variable name="DESTINATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="TODO" alwaysStopAt="false" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VARNAME" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="fdb_storage&lt;abbreviation&gt;" value="FirebaseStorage firebaseStorage;&#10;StorageReference storageReference;&#10;$END$//아랫놈은 onC로 이동&#10;firebaseStorage = FirebaseStorage.getInstance();&#10;storageReference = firebaseStorage.getReference();" description="firebase storage" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="fdb_s2_ref" value="StorageReference storageReference_$CHILD_NAME$ = firebaseStorage.getReference($imageName$);&#10;storageReference_$CHID_NAME_COPY$" description="firebase storage reference 2" toReformat="false" toShortenFQNames="true">
    <variable name="CHILD_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="imageName" expression="" defaultValue="CHILD_NAME" alwaysStopAt="true" />
    <variable name="CHID_NAME_COPY" expression="" defaultValue="CHILD_NAME" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="igo2" value="startActivity(new Intent(this, $destination$.class));&#10;" description="igo one line intent" toReformat="true" toShortenFQNames="true">
    <variable name="destination" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fdbref-div" value="FirebaseDatabase database; &#10;DatabaseReference fdbref$NAME$;&#10;FirebaseAuth auth; &#10;FirebaseUser firebaseUser; &#10;&#10;database = FirebaseDatabase.getInstance();&#10;fdbref$NAMECOPY$= database.getReference(&quot;$CHILD_NAME$&quot;);&#10;auth= FirebaseAuth.getInstance();&#10;firebaseUser = auth.getCurrentUser();&#10;" description="firebase db connect with reference version2" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAMECOPY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CHILD_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="circleimg" value="&lt;androidx.constraintlayout.widget.ConstraintLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;de.hdodenhof.circleimageview.CircleImageView&#10;                android:layout_width=&quot;75dp&quot;&#10;                android:layout_height=&quot;75dp&quot;&#10;                android:id=&quot;@+id/ivCircle_users_card&quot;&#10;                android:src=&quot;@drawable/user_icon&quot;&#10;                app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;                app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;                app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;                app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;                android:layout_marginEnd=&quot;330dp&quot;&#10;                android:layout_marginStart=&quot;10dp&quot; /&gt;&#10;&#10;    &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" description="동그라미 이미지" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="adapter" value="public class $NAME_OF_THE_ADAPTER$ extends RecyclerView.Adapter&lt;$NAME_OF_THE_ADAPTER$.ViewHolder&gt;&#10;{&#10;    List &lt;String&gt; $LISTNAME$;&#10;&#10;    public $NAME_OF_THE_ADAPTER$(List&lt;String&gt; $LISTNAME$) {&#10;        this.$LSITNAMECOPY$ = $LISTNAME$;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext().inflate(R.layout.users_card$templateName$, parent,false);&#10;        return new ViewHolder(view);&#10;&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return $LISTNAME$.size();&#10;    }&#10;&#10;    public class ViewHolder extends RecyclerView.ViewHolder&#10;    {&#10;        private TextView textView;&#10;        private ImageView imageView;&#10;        private CardView cardView;&#10;        &#10;        public ViewHolder(@NonNull View itemView)&#10;        {&#10;            super(itemView);&#10;            &#10;            textView = itemView.findViewById(R.id.tvUsers_users_card);&#10;            imageView = itemView.findViewById(R.id.ivCircle_users_card);&#10;            cardView = itemView.findViewById(R.id.cardView);&#10;        }&#10;    }&#10;}&#10;" description="java adapter template" toReformat="false" toShortenFQNames="true">
    <variable name="NAME_OF_THE_ADAPTER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LISTNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LSITNAMECOPY" expression="" defaultValue="LISTNAME" alwaysStopAt="false" />
    <variable name="templateName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="retrofitBase" value="retrofit2.Retrofit retrofit = new retrofit2.Retrofit.Builder().baseUrl(&quot;$baseURL$&quot;)&#10;                .addConverterFactory(retrofit2.converter.gson.GsonConverterFactory.create())&#10;                .build();&#10;&#10;RetrofitApi retroifitApi = retrofit.create(RetrofitApi.class);&#10;$END$" description="retrofit base url" toReformat="true" toShortenFQNames="true">
    <variable name="baseURL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="xml rv_layout_item" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;10dp&quot;&#10;        android:background=&quot;#8BC34A&quot;&gt;&#10;&#10;    &lt;TextView&#10;            android:text=&quot;TextView&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:id=&quot;@+id/tv1_layoutItem&quot; /&gt;&#10;&#10;    &lt;TextView&#10;            android:text=&quot;TextView&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:id=&quot;@+id/tv2_layoutItem&quot; /&gt;&#10;&#10;    &lt;TextView&#10;            android:text=&quot;TextView&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:id=&quot;@+id/tv3_layoutItem&quot; /&gt;&#10;&#10;    &lt;TextView&#10;            android:text=&quot;TextView&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:id=&quot;@+id/tv4_layoutItem&quot; /&gt;&#10;&lt;/LinearLayout&gt;" description="recyclerview layout xml" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="rv adaper" value="package com.letz.retrofit;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import java.util.List;&#10;&#10;public class RecyclerAdapter extends RecyclerView.Adapter&lt;RecyclerAdapter.ViewHolder&gt;&#10;{&#10;    private List&lt;ModelClass&gt; data;&#10;&#10;    public RecyclerAdapter(List&lt;ModelClass&gt; data) {&#10;        this.data = data;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public RecyclerAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.rv_layout_item, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull RecyclerAdapter.ViewHolder holder, int position) {&#10;        holder.texta.setText(data.get(position).getUserId());&#10;        holder.textb.setText(data.get(position).getUserId());&#10;        holder.textc.setText(data.get(position).getUserId());&#10;        holder.textd.setText(data.get(position).getUserId());&#10;&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return data.size();&#10;    }&#10;&#10;    public class ViewHolder extends RecyclerView.ViewHolder&#10;    {&#10;        TextView texta, textb, textc, textd;&#10;&#10;        public ViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;&#10;            texta = itemView.findViewById(R.id.tv1_layoutItem);&#10;            textb = itemView.findViewById(R.id.tv2_layoutItem);&#10;            textc = itemView.findViewById(R.id.tv3_layoutItem);&#10;            textd = itemView.findViewById(R.id.tv4_layoutItem);&#10;        }&#10;    }&#10;}&#10;" description="recycleradapter" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>